{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAO,SAAS,aAAa,CAAC,QAEpC,SAAS,EAAmB,CAAI,CAAE,CAAW,EAC3C,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,SAAS,CAAG,EACzB,EAAa,WAAW,CAAG,EAC3B,EAAK,MAAM,CAAC,EACd,CAEA,EAAK,gBAAgB,CAAC,QAAS,WAK7B,AAJiB,IAAI,QAAQ,SAAU,CAAO,CAAE,CAAM,EACpD,GACF,GAGG,IAAI,CAAC,WACJ,EAAmB,UAAW,wBAChC,GACC,KAAK,CAAC,WACL,EAAmB,wBAAyB,wBAC9C,EACJ,GAMA,AAJiB,IAAI,QAAQ,SAAU,CAAO,CAAE,CAAM,EACpD,EAAO,AAAI,QACb,GAES,KAAK,CAAC,WACb,WAAW,WACT,EAAmB,wBAAyB,wBAC9C,EAAG,IACL","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar logo = document.querySelector(\".logo\");\nvar body = document.querySelector(\"body\");\nfunction createNotification(type, textMessage) {\n    var notification = document.createElement(\"div\");\n    notification.className = type;\n    notification.textContent = textMessage;\n    body.append(notification);\n}\nlogo.addEventListener(\"click\", function() {\n    var promise1 = new Promise(function(resolve, reject) {\n        resolve();\n    });\n    promise1.then(function() {\n        createNotification(\"message\", \"Promise was resolved!\");\n    }).catch(function() {\n        createNotification(\"message error-message\", \"Promise was rejected!\");\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    reject(new Error());\n});\npromise2.catch(function() {\n    setTimeout(function() {\n        createNotification(\"message error-message\", \"Promise was rejected!\");\n    }, 3000);\n});\n\n//# sourceMappingURL=index.57f8b3d2.js.map\n","'use strict';\n\nconst logo = document.querySelector('.logo');\nconst body = document.querySelector('body');\n\nfunction createNotification(type, textMessage) {\n  const notification = document.createElement('div');\n\n  notification.className = type;\n  notification.textContent = textMessage;\n  body.append(notification);\n}\n\nlogo.addEventListener('click', function () {\n  const promise1 = new Promise(function (resolve, reject) {\n    resolve();\n  });\n\n  promise1\n    .then(() => {\n      createNotification('message', 'Promise was resolved!');\n    })\n    .catch(() => {\n      createNotification('message error-message', 'Promise was rejected!');\n    });\n});\n\nconst promise2 = new Promise(function (resolve, reject) {\n  reject(new Error());\n});\n\npromise2.catch(() => {\n  setTimeout(() => {\n    createNotification('message error-message', 'Promise was rejected!');\n  }, 3000);\n});\n"],"names":["logo","document","querySelector","body","createNotification","type","textMessage","notification","createElement","className","textContent","append","addEventListener","promise1","Promise","resolve","reject","then","catch","promise2","Error","setTimeout"],"version":3,"file":"index.57f8b3d2.js.map"}